name: Deploy Backend

on:
  workflow_dispatch:
  push:
    branches: [main]

env:
  AWS_REGION: ap-northeast-1
  TERRAFORM_VERSION: 1.9.0

jobs:
  deploy-backend:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TERRAFORM_VERSION }}

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Build Lambda functions
        run: npm run package

      - name: Verify Lambda build
        run: |
          ls -la dist/
          echo "✅ Lambda functions built successfully"

      - name: Sync Google Client Secret to SSM Parameter Store
        run: |
          echo "Syncing Google Client Secret to SSM Parameter Store..."
          aws ssm put-parameter \
            --name "/chainy/prod/google-client-secret" \
            --value "${{ secrets.GOOGLE_CLIENT_SECRET }}" \
            --type "SecureString" \
            --overwrite \
            --region ap-northeast-1
          echo "✅ Google Client Secret synced to SSM Parameter Store"

      - name: Create production terraform.tfvars
        run: |
          cat > terraform.tfvars << EOF
          # Authentication configuration
          enable_authentication = true

          # Google OAuth Configuration
          google_client_id     = "${{ secrets.GOOGLE_CLIENT_ID }}"
          # Note: google_client_secret is managed via SSM Parameter Store: /chainy/prod/google-client-secret
          google_redirect_uri  = "https://chainy.luichu.dev"

          # AWS Configuration
          aws_region = "ap-northeast-1"
          environment = "prod"

          # Domain Configuration
          domain = "chainy.luichu.dev"
          protocol = "https"

          # Database Configuration
          dynamodb_table_name = "${{ secrets.DYNAMODB_TABLE_NAME }}"
          users_table_name = "${{ secrets.USERS_TABLE_NAME }}"
          users_table_arn = "${{ secrets.USERS_TABLE_ARN }}"

          # Web Domain Configuration
          web_domain = "${{ secrets.WEB_DOMAIN }}"
          web_subdomain = "${{ secrets.WEB_SUBDOMAIN }}"
          web_hosted_zone_id = "${{ secrets.WEB_HOSTED_ZONE_ID }}"

          # Security Configuration
          jwt_secret_parameter_name = "/chainy/prod/jwt-secret"
          waf_enabled = false

          # Cost Optimization
          cost_optimization = false
          debug_mode = false
          log_level = "INFO"
          EOF

          # Verify the terraform.tfvars file was created correctly
          echo "📋 Created terraform.tfvars with the following content:"
          cat terraform.tfvars

          # Remove any potential google_client_secret references
          echo "🧹 Cleaning up terraform.tfvars..."
          sed -i '/google_client_secret/d' terraform.tfvars

          # Also remove any empty lines that might cause issues
          sed -i '/^$/d' terraform.tfvars

          echo "✅ Final terraform.tfvars content:"
          cat terraform.tfvars

          # Verify no google_client_secret references remain
          if grep -q "google_client_secret" terraform.tfvars; then
            echo "❌ ERROR: google_client_secret still found in terraform.tfvars"
            exit 1
          else
            echo "✅ SUCCESS: No google_client_secret references found"
          fi

      - name: Terraform Init
        run: terraform init

      - name: Terraform Validate
        run: terraform validate

      - name: Terraform Plan
        run: |
          # Run terraform plan with explicit variable validation
          # Use -compact-warnings to reduce noise and ignore undefined variables
          terraform plan -var-file=terraform.tfvars -compact-warnings -var="google_client_secret=" || terraform plan -var-file=terraform.tfvars -compact-warnings

      - name: Terraform Apply
        run: terraform apply -auto-approve

      - name: Health Check
        run: |
          curl -f https://chainy.luichu.dev || exit 1
          echo "✅ Production deployment successful!"
